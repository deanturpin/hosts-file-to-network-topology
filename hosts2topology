#!/bin/bash

# Read hosts
mapfile hosts < hosts

# Decimal to binary netmask converter
function decimal2binary {

	readonly local d2b=({0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1}{0,1})
	local binary=
	local ip=$1

	# Extract decimals
	while [[ $ip =~ [[:digit:]]{1,3} ]]; do

		# Convert decimal to binary and append to result
		binary+=${d2b[$BASH_REMATCH]}
		
		# Remove the match from current search
		ip=${ip/$BASH_REMATCH//}
	done

	echo $binary
}

# Extract IPs and netmasks and initialise nodes
declare -A nodes
declare -A netmasks

for (( i=0; i<${#hosts[*]}; ++i )); do

	# Does entry match an IP?
	if [[ ${hosts[i]} =~ ^[[:digit:]\.]{7,} ]]; then
		nodes[$BASH_REMATCH]=unknown
	else
		# Does entry match a CIDR netmask?
		[[ ${hosts[i]} =~ ([[:digit:]\.]{7,})/([[:digit:]]{2}) ]] && netmasks[${BASH_REMATCH[1]}]=${BASH_REMATCH[2]}
	fi
done

# Compare each IP with the netmasks
for ip in ${!nodes[*]}; do

	# Convert IP to binary
	ip_binary=$(decimal2binary $ip)

	# Compare with the netmasks
	for netmask in ${!netmasks[*]}; do

		# Convert netmask to binary
		netmask_binary=$(decimal2binary $netmask)

		# Trim off host identifier
		bits=${netmasks[$netmask]}
		netmask_binary=${netmask_binary:0:$bits}

		# Compare with IP and stop looking if we find a match
		[[ $ip_binary =~ ^$netmask_binary ]] && nodes[$ip]=$netmask && break
	done
done

# Header
dot="graph { node [style=filled]; node [fillcolor=red]; "

# Dump netmasks
for netmask in ${!netmasks[*]}; do dot+="\"$netmask\" [fillcolor=cyan]; "; done

# Dump node info
for node in ${!nodes[*]}; do dot+="\"$node\" [fillcolor=white]; "; done

# Dump connections
for node in ${!nodes[*]}; do dot+="\"$node\"--\"${nodes[$node]}\"; "; done

# Footer
dot+="}"

# Generate topology
circo -T png > topology.png <<< $dot
